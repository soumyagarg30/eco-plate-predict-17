
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://prexhyxfznksxvvjzzsh.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6InByZXhoeXhmem5rc3h2dmp6enNoIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDc4NDAxNjYsImV4cCI6MjA2MzQxNjE2Nn0.4nQObXz-5Fe4hKQsbospUoIgfKOpob1_SyoJMT58Yc4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY);

// Custom fetch wrapper for direct authentication without using user_auth table
export const directAuth = async (email: string, password: string, userType: string) => {
  // Determine which table to check based on userType
  let tableName: string;
  
  switch (userType) {
    case "restaurant":
      tableName = "Restaurants_Details";
      break;
    case "user":
      tableName = "User_Details";
      break;
    case "ngo":
      tableName = "Ngo's";
      break;
    case "packing":
      tableName = "Packing_Companies";
      break;
    case "admin":
      tableName = "Admin";
      break;
    default:
      throw new Error("Invalid user type");
  }
  
  // Query the appropriate table directly
  const { data, error } = await supabase
    .from(tableName as any)
    .select('*')
    .eq('email', email)
    .eq('password', password)
    .single();
  
  if (error) throw error;
  return data;
};
